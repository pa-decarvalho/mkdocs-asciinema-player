{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MkDocs Asciinema Player Asciinema-Player version 3.9.0 A Mkdocs Plugin to include asciinema-player in your documentation. Terminal window.addEventListener(\"load\", function(event) { AsciinemaPlayer.create(\"/mkdocs-asciinema-player/assets/asciinema/asciinema_example.cast\", document.getElementById(\"asciinema-player-0\"), { cols: 80, rows: 24, autoPlay: true, preload: false, loop: false, startAt: \"0:00\", speed: 1.0, theme: \"asciinema\", fit: \"width\", controls: \"auto\", pauseOnMarkers: false, terminalFontSize: \"small\", terminalFontFamily: \"\", terminalLineHeight: 1.33333333, }); });","title":"MkDocs Asciinema Player"},{"location":"#mkdocs-asciinema-player","text":"","title":"MkDocs Asciinema Player"},{"location":"#asciinema-player-version-390","text":"A Mkdocs Plugin to include asciinema-player in your documentation. Terminal window.addEventListener(\"load\", function(event) { AsciinemaPlayer.create(\"/mkdocs-asciinema-player/assets/asciinema/asciinema_example.cast\", document.getElementById(\"asciinema-player-0\"), { cols: 80, rows: 24, autoPlay: true, preload: false, loop: false, startAt: \"0:00\", speed: 1.0, theme: \"asciinema\", fit: \"width\", controls: \"auto\", pauseOnMarkers: false, terminalFontSize: \"small\", terminalFontFamily: \"\", terminalLineHeight: 1.33333333, }); });","title":"Asciinema-Player version 3.9.0"},{"location":"contributing/","text":"Contributing Thank you for considering contributing to the mkdocs-asciinema-player project! We appreciate your time and effort in helping to make this project better. Table of Contents How Can I Contribute? Reporting Bugs Suggesting Enhancements Pull Requests Development Setup Using Gitpod Local Development Project Guidelines Coding Standards Creating Themes License How Can I Contribute? Reporting Bugs Create an issue on our GitHub Issues page Provide detailed information about: Steps to reproduce the bug Expected behavior Actual behavior Environment details (OS, browser, etc.) Suggesting Enhancements Open an issue on our GitHub Issues page Clearly describe: The proposed enhancement Why it would be useful How it should work Pull Requests Follow these steps to submit your contributions: Fork the repository to your GitHub account Clone your fork: git clone https://github.com/your-username/mkdocs-asciinema-player.git Create a new branch: git checkout -b feature/your-feature-name Make and commit your changes: git add . && git commit -m \"feat: my new feature\" Push your branch: git push origin feature/your-feature-name Open a Pull Request on the main repository Note : Please use Conventional Commits for your commit messages. Development Setup Using Gitpod Read the Getting Started Guide from Gitpod Open your forked project in Gitpod Local Development Prerequisites: Python >= 3.9 Task >= 3.41.0 Setup steps: Clone your fork: git clone https://github.com/your-username/mkdocs-asciinema-player.git Run the bootstrap command: task bootstrap Project Guidelines Coding Standards Follow PEP 8 for Python code Write clear and descriptive commit messages using Conventional Commits Include tests for new functionality Keep documentation up-to-date Ensure all tests pass before submitting PR Creating Themes To create a new theme for the asciinema player: Create a <my-new-theme>.html file in: src/mkdocs_asciinema_player/templates/themes Add CSS styles in the src/mkdocs_asciinema_player/assets/terminal-player.css file, keeping the styles ordered alphabetically by theme name. Update documentation: task update:docs License By contributing, you agree that your contributions will be licensed under the project's MIT License .","title":"Contributing"},{"location":"contributing/#contributing","text":"Thank you for considering contributing to the mkdocs-asciinema-player project! We appreciate your time and effort in helping to make this project better.","title":"Contributing"},{"location":"contributing/#table-of-contents","text":"How Can I Contribute? Reporting Bugs Suggesting Enhancements Pull Requests Development Setup Using Gitpod Local Development Project Guidelines Coding Standards Creating Themes License","title":"Table of Contents"},{"location":"contributing/#how-can-i-contribute","text":"","title":"How Can I Contribute?"},{"location":"contributing/#reporting-bugs","text":"Create an issue on our GitHub Issues page Provide detailed information about: Steps to reproduce the bug Expected behavior Actual behavior Environment details (OS, browser, etc.)","title":"Reporting Bugs"},{"location":"contributing/#suggesting-enhancements","text":"Open an issue on our GitHub Issues page Clearly describe: The proposed enhancement Why it would be useful How it should work","title":"Suggesting Enhancements"},{"location":"contributing/#pull-requests","text":"Follow these steps to submit your contributions: Fork the repository to your GitHub account Clone your fork: git clone https://github.com/your-username/mkdocs-asciinema-player.git Create a new branch: git checkout -b feature/your-feature-name Make and commit your changes: git add . && git commit -m \"feat: my new feature\" Push your branch: git push origin feature/your-feature-name Open a Pull Request on the main repository Note : Please use Conventional Commits for your commit messages.","title":"Pull Requests"},{"location":"contributing/#development-setup","text":"","title":"Development Setup"},{"location":"contributing/#using-gitpod","text":"Read the Getting Started Guide from Gitpod Open your forked project in Gitpod","title":"Using Gitpod"},{"location":"contributing/#local-development","text":"Prerequisites: Python >= 3.9 Task >= 3.41.0 Setup steps: Clone your fork: git clone https://github.com/your-username/mkdocs-asciinema-player.git Run the bootstrap command: task bootstrap","title":"Local Development"},{"location":"contributing/#project-guidelines","text":"","title":"Project Guidelines"},{"location":"contributing/#coding-standards","text":"Follow PEP 8 for Python code Write clear and descriptive commit messages using Conventional Commits Include tests for new functionality Keep documentation up-to-date Ensure all tests pass before submitting PR","title":"Coding Standards"},{"location":"contributing/#creating-themes","text":"To create a new theme for the asciinema player: Create a <my-new-theme>.html file in: src/mkdocs_asciinema_player/templates/themes Add CSS styles in the src/mkdocs_asciinema_player/assets/terminal-player.css file, keeping the styles ordered alphabetically by theme name. Update documentation: task update:docs","title":"Creating Themes"},{"location":"contributing/#license","text":"By contributing, you agree that your contributions will be licensed under the project's MIT License .","title":"License"},{"location":"getting-started/","text":"Getting Started Installation To begin, install the mkdocs-asciinema-player package by executing the following command in the command line: pip install mkdocs-asciinema-player Configuration In your mkdocs.yml file, include asciinema-player in the plugins section as follows: plugins: - search - asciinema-player Usage To use mkdocs-asciinema-player you need to create a fenced code block with asciinema-player specified as the language. Within your MkDocs documentation folder, add any asciinema .cast file and insert the following minimal JSON inside your fenced code block: TODO: Add example (not working because the plugin parses it; refer to the README for an example)","title":"Getting Started"},{"location":"getting-started/#getting-started","text":"","title":"Getting Started"},{"location":"getting-started/#installation","text":"To begin, install the mkdocs-asciinema-player package by executing the following command in the command line: pip install mkdocs-asciinema-player","title":"Installation"},{"location":"getting-started/#configuration","text":"In your mkdocs.yml file, include asciinema-player in the plugins section as follows: plugins: - search - asciinema-player","title":"Configuration"},{"location":"getting-started/#usage","text":"To use mkdocs-asciinema-player you need to create a fenced code block with asciinema-player specified as the language. Within your MkDocs documentation folder, add any asciinema .cast file and insert the following minimal JSON inside your fenced code block: TODO: Add example (not working because the plugin parses it; refer to the README for an example)","title":"Usage"},{"location":"setup/","text":"Setup Configuration Global Usage In your mkdocs.yml file, in the plugins section, you can use variables ( Using plugins ): plugins: - search - asciinema-player: myvar: \"example\" Below is a table of available variables: Parameter Value Description loglevel \"INFO\" Log level of the plugin (\"DEBUG\", \"INFO\", \"WARNING\", \"ERROR\", \"FATAL\"). Individual Usage To use individual configurations, create a JSON object like the example below: { \"file\": \"assets/asciinema/bootstrap.cast\", \"cols\": 80, \"auto_play\": \"true\" } Below is a table of available configuration parameters: Parameter Value Description file - Path to the cast file. title \"Terminal\" Title of the terminal. mkap_theme \"night\" Theme of the terminal. cols 80 Number of columns in the terminal. rows 24 Number of rows in the terminal. auto_play false Automatic playback upon load. preload false Preload the cast file on load. loop false Enable looped playback. start_at 0 Start playback at a specific time. speed 1 Playback speed multiplier. theme \"asciinema\" Terminal theme for rendering. fit \"width\" Terminal fit mode. controls \"auto\" Display controls automatically. pause_on_markers false Pause playback on markers. terminal_font_size \"small\" Font size of the terminal. terminal_font_family \"Consolas\" Font family of the terminal. terminal_line_height \"1.33333333\" Line height of the terminal. For more detailed information and additional options, refer to the official documentation .","title":"Setup"},{"location":"setup/#setup","text":"","title":"Setup"},{"location":"setup/#configuration","text":"","title":"Configuration"},{"location":"setup/#global-usage","text":"In your mkdocs.yml file, in the plugins section, you can use variables ( Using plugins ): plugins: - search - asciinema-player: myvar: \"example\" Below is a table of available variables: Parameter Value Description loglevel \"INFO\" Log level of the plugin (\"DEBUG\", \"INFO\", \"WARNING\", \"ERROR\", \"FATAL\").","title":"Global Usage"},{"location":"setup/#individual-usage","text":"To use individual configurations, create a JSON object like the example below: { \"file\": \"assets/asciinema/bootstrap.cast\", \"cols\": 80, \"auto_play\": \"true\" } Below is a table of available configuration parameters: Parameter Value Description file - Path to the cast file. title \"Terminal\" Title of the terminal. mkap_theme \"night\" Theme of the terminal. cols 80 Number of columns in the terminal. rows 24 Number of rows in the terminal. auto_play false Automatic playback upon load. preload false Preload the cast file on load. loop false Enable looped playback. start_at 0 Start playback at a specific time. speed 1 Playback speed multiplier. theme \"asciinema\" Terminal theme for rendering. fit \"width\" Terminal fit mode. controls \"auto\" Display controls automatically. pause_on_markers false Pause playback on markers. terminal_font_size \"small\" Font size of the terminal. terminal_font_family \"Consolas\" Font family of the terminal. terminal_line_height \"1.33333333\" Line height of the terminal. For more detailed information and additional options, refer to the official documentation .","title":"Individual Usage"},{"location":"themes/","text":"Themes Blue Theme Terminal window.addEventListener(\"load\", function(event) { AsciinemaPlayer.create(\"/mkdocs-asciinema-player/assets/asciinema/asciinema_example.cast\", document.getElementById(\"asciinema-player-1\"), { cols: 80, rows: 24, autoPlay: true, preload: false, loop: false, startAt: \"0:00\", speed: 1.0, theme: \"asciinema\", fit: \"width\", controls: \"auto\", pauseOnMarkers: false, terminalFontSize: \"small\", terminalFontFamily: \"\", terminalLineHeight: 1.33333333, }); }); Example: { \"file\": \"assets/asciinema/asciinema_example.cast\", \"mkap_theme\": \"blue\", \"auto_play\": true } Night Theme Terminal window.addEventListener(\"load\", function(event) { AsciinemaPlayer.create(\"/mkdocs-asciinema-player/assets/asciinema/asciinema_example.cast\", document.getElementById(\"asciinema-player-2\"), { cols: 80, rows: 24, autoPlay: true, preload: false, loop: false, startAt: \"0:00\", speed: 1.0, theme: \"asciinema\", fit: \"width\", controls: \"auto\", pauseOnMarkers: false, terminalFontSize: \"small\", terminalFontFamily: \"\", terminalLineHeight: 1.33333333, }); }); Example: { \"file\": \"assets/asciinema/asciinema_example.cast\", \"mkap_theme\": \"night\", \"auto_play\": true } None Theme window.addEventListener(\"load\", function(event) { AsciinemaPlayer.create(\"/mkdocs-asciinema-player/assets/asciinema/asciinema_example.cast\", document.getElementById(\"asciinema-player-3\"), { cols: 80, rows: 24, autoPlay: true, preload: false, loop: false, startAt: \"0:00\", speed: 1.0, theme: \"asciinema\", fit: \"width\", controls: \"auto\", pauseOnMarkers: false, terminalFontSize: \"small\", terminalFontFamily: \"\", terminalLineHeight: 1.33333333, }); }); Example: { \"file\": \"assets/asciinema/asciinema_example.cast\", \"mkap_theme\": \"none\", \"auto_play\": true } Penguin Theme \u2500 \u25fb \u2715 Terminal window.addEventListener(\"load\", function(event) { AsciinemaPlayer.create(\"/mkdocs-asciinema-player/assets/asciinema/asciinema_example.cast\", document.getElementById(\"asciinema-player-4\"), { cols: 80, rows: 24, autoPlay: true, preload: false, loop: false, startAt: \"0:00\", speed: 1.0, theme: \"asciinema\", fit: \"width\", controls: \"auto\", pauseOnMarkers: false, terminalFontSize: \"small\", terminalFontFamily: \"\", terminalLineHeight: 1.33333333, }); }); Example: { \"file\": \"assets/asciinema/asciinema_example.cast\", \"mkap_theme\": \"penguin\", \"auto_play\": true }","title":"Themes"},{"location":"themes/#themes","text":"","title":"Themes"},{"location":"themes/#blue-theme","text":"Terminal window.addEventListener(\"load\", function(event) { AsciinemaPlayer.create(\"/mkdocs-asciinema-player/assets/asciinema/asciinema_example.cast\", document.getElementById(\"asciinema-player-1\"), { cols: 80, rows: 24, autoPlay: true, preload: false, loop: false, startAt: \"0:00\", speed: 1.0, theme: \"asciinema\", fit: \"width\", controls: \"auto\", pauseOnMarkers: false, terminalFontSize: \"small\", terminalFontFamily: \"\", terminalLineHeight: 1.33333333, }); }); Example: { \"file\": \"assets/asciinema/asciinema_example.cast\", \"mkap_theme\": \"blue\", \"auto_play\": true }","title":"Blue Theme"},{"location":"themes/#night-theme","text":"Terminal window.addEventListener(\"load\", function(event) { AsciinemaPlayer.create(\"/mkdocs-asciinema-player/assets/asciinema/asciinema_example.cast\", document.getElementById(\"asciinema-player-2\"), { cols: 80, rows: 24, autoPlay: true, preload: false, loop: false, startAt: \"0:00\", speed: 1.0, theme: \"asciinema\", fit: \"width\", controls: \"auto\", pauseOnMarkers: false, terminalFontSize: \"small\", terminalFontFamily: \"\", terminalLineHeight: 1.33333333, }); }); Example: { \"file\": \"assets/asciinema/asciinema_example.cast\", \"mkap_theme\": \"night\", \"auto_play\": true }","title":"Night Theme"},{"location":"themes/#none-theme","text":"window.addEventListener(\"load\", function(event) { AsciinemaPlayer.create(\"/mkdocs-asciinema-player/assets/asciinema/asciinema_example.cast\", document.getElementById(\"asciinema-player-3\"), { cols: 80, rows: 24, autoPlay: true, preload: false, loop: false, startAt: \"0:00\", speed: 1.0, theme: \"asciinema\", fit: \"width\", controls: \"auto\", pauseOnMarkers: false, terminalFontSize: \"small\", terminalFontFamily: \"\", terminalLineHeight: 1.33333333, }); }); Example: { \"file\": \"assets/asciinema/asciinema_example.cast\", \"mkap_theme\": \"none\", \"auto_play\": true }","title":"None Theme"},{"location":"themes/#penguin-theme","text":"\u2500 \u25fb \u2715 Terminal window.addEventListener(\"load\", function(event) { AsciinemaPlayer.create(\"/mkdocs-asciinema-player/assets/asciinema/asciinema_example.cast\", document.getElementById(\"asciinema-player-4\"), { cols: 80, rows: 24, autoPlay: true, preload: false, loop: false, startAt: \"0:00\", speed: 1.0, theme: \"asciinema\", fit: \"width\", controls: \"auto\", pauseOnMarkers: false, terminalFontSize: \"small\", terminalFontFamily: \"\", terminalLineHeight: 1.33333333, }); }); Example: { \"file\": \"assets/asciinema/asciinema_example.cast\", \"mkap_theme\": \"penguin\", \"auto_play\": true }","title":"Penguin Theme"}]}