---
version: "3"

tasks:
  python-installed:
    desc: Ensure that Python is installed
    silent: true
    cmds:
      - "{{.PYTHON}} --version"

  # Checks if the provided version is greater than or equal to the minimum version.
  version-checker:
    internal: true
    silent: true
    cmds:
      - |
        {{.PYTHON}} -c """
        version_to_check = '{{.VERSION_TO_CHECK}}'
        min_version = '{{.VERSION_MIN}}'

        if tuple(map(int, version_to_check.split('.'))) < tuple(map(int, min_version.split('.'))):
          print('{{.TOOL}} version {{.VERSION_TO_CHECK}} is lower than the required minimum version of {{.VERSION_MIN}}.')
          exit(1)
        print('{{.TOOL}} version {{.VERSION_TO_CHECK}} OK.')
        exit(0)
        """

  python-version:
    desc: Ensure that Python version is greater than the required minimum version.
    cmds:
      - task: version-checker
        vars:
          TOOL: Python
          VERSION_TO_CHECK:
            sh: "{{.PYTHON}} --version | grep -oP '\\d+\\.\\d+\\.\\d+'"
          VERSION_MIN: "{{.PYTHON_MIN_VERSION}}"

  task-version:
    desc: Ensure that Task version is greater than the required minimum version.
    cmds:
      - task: version-checker
        vars:
          TOOL: Task
          VERSION_TO_CHECK:
            sh: task --version | grep -oP '\d+\.\d+\.\d+'
          VERSION_MIN: "{{.TASK_MIN_VERSION}}"

  all:
    desc: Run all checks
    silent: true
    cmds:
      - echo "-------------------------"
      - task: python-installed
      - task: python-version
      - task: task-version
      - echo "-------------------------"
